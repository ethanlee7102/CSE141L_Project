LOAD R4, #0xFF
MVFR R4
ADDI R4, #0xFF
LOAD R5, #0
MVFR R5
LOAD R1, #0
MVFR R1
ADDI R2, R1, #1
LOAD R6, [R1]
MVFR R6
LOAD R7, [R1+1]
MVFR R7
LOAD R8, [R2]
MVFR R8
LOAD R9, [R2+1]
MVFR R9
XOR R10, R6, R8
XOR R11, R7, R9
MVFR R10
MVFR R11
LOAD R12, #0
MVFR R12
AND R13, R10, #1
ADD R12, R12, R13
SR R10, R10, #1
BZ calc_hamming_LSB, R10
JMP calc_hamming_MSB
AND R14, R11, #1
ADD R12, R12, R14
SR R11, R11, #1
BZ end_calc_hamming, R11
JMP calc_hamming_LSB
SUB R15, R4, R12
BZ update_min, R15
SUB R15, R12, R5
BZ update_max, R15
ADDI R2, R2, #2
SUB R15, R2, #64
BZ inner_loop, R15
ADDI R1, R1, #2
SUB R15, R1, #62
BZ outer_loop, R15
ST R4, 64
ST R5, 65
BZ halt, R0
ADD R4, R12, #0
JMP inner_loop
ADD R5, R12, #0
JMP inner_loop
HALT